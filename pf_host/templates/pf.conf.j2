####################################################################################################
### THIS pf.conf IS MANAGED BY ANSIBLE, CHANGES WILL BE OVERWRITTEN!
####################################################################################################

####################################################################################################
################ options ###############################
{% for option, value in pf_options.items() %}
set {{ option }} {{ value }}
{% endfor %}


####################################################################################################
################ macros ################################
{% for interface in network_interfaces if interface.pf_rules|default(True) %}
{% if interface.vlan is defined %}
{{ interface.pf_macro }}="{{ interface.interface }}.{{ interface.vlan }}"
{% else %}
{{ interface.pf_macro }}="{{ interface.interface }}"
{% endif %}
{% endfor %}

table <firewalls_own_ips> { {% for ip in ansible_all_ipv4_addresses %}{{ ip }} {% endfor %}{% for ip in ansible_all_ipv6_addresses %}{{ ip }} {% endfor %} }
table <not_firewalls_own_ips> { {% for ip in ansible_all_ipv4_addresses %}!{{ ip }} {% endfor %}{% for ip in ansible_all_ipv6_addresses %}!{{ ip }} {% endfor %} 0/0 0::/0 }

################ common/shared address macros ###############
{{ pf_common_address_macros | default("# No common macros found") }}

################ macros specific to {{ ansible_nodename }} #######################
{{ pf_local_address_macros | default("# No local macros found") }}


###################################################################################################
############### scrubbing ##############################
{% for interface in network_interfaces if interface.pf_rules|default(True) %}
{% if interface.pf_scrub %}
scrub in on ${{ interface.pf_macro }} all fragment reassemble
{% endif %}
{% endfor %}

############### outgoing translation NAT #################
{{ pf_nat_rules | default("# No NAT rules found") }}

############### incoming translation RDR ########################
{{ pf_rdr_rules | default("# No RDR rules found") }}


####################################################################################################
############### filtering ##############################
### block everything
block log all

### skip loopback interface(s)
set skip on lo0

{% if network_interfaces|length == 1 %}
{% for interface in network_interfaces if interface.pf_rules|default(True) %}
### this host is single homed, permit all outgoing traffic
pass out quick on ${{ interface.pf_macro }} from (${{ interface.pf_macro }})
{% endfor %}
{% endif %}

#######################################################
# CUSTOM FILTER RULES BELOW HERE (from pf_filter_rules dict)

{% for rule in pf_filter_rules %}
# {{ rule.comment }}
{% if rule.block is defined %}block{% else %}pass{% endif %}
{% if rule.direction is defined %} {{ rule.direction }}{% endif %}
{% if not rule.slow is defined %} quick{% endif %}
{% if rule.block is defined or rule.log is defined %} log{% endif %}
{% if rule.interfaces is defined %} on { {{ rule.interfaces | join(" ") }} }{% endif %}
{% if rule.reply_to is defined %} reply-to ( {{ rule.reply_to }} ){% endif %}
{% if rule.inet is defined %} {{ rule.inet }}{% endif %}
{% if rule.protocols is defined %} proto { {{ rule.protocols | join(" ") }} }{% endif %}
{% if rule.sources is defined %} from { {{ rule.sources | join(" ") }} }{% endif %}
{% if rule.destinations is defined %} to { {{ rule.destinations | join(" ") }} }{% endif %}
{% if rule.ports is defined %} port { {{ rule.ports | join(" ") }} }{% endif %}
{% if rule.label is defined %} label "{{ rule.label }}"{% endif %}
{% if rule.tag is defined %} tag {{ rule.tag }}{% endif %}
{% if rule.tagged is defined %} tagged {{ rule.tagged }}{% endif %}
{% if rule.rtable is defined %} rtable {{ rule.rtable }}{% endif %}
{% if rule.ridentifier is defined %} ridentifier {{ rule.rtable }}{% endif %}
{% if rule.state_options is defined %} keep state ({{ rule.state_options|join(" ") }}){% endif %}


{% endfor %}

#######################################################
### GENERIC (autogenerated) INTERFACE RULES BELOW HERE

{% for interface in network_interfaces if interface.pf_rules|default(True) %}
###################################################################################################
## RULES FOR INTERFACE {{ interface.interface }} - {{ interface.description }}
# interface debug: {{ interface }}

# permit ICMP4
pass in quick on ${{ interface.pf_macro }} {% if "pf_reply_to_v4" in interface %} reply-to ( {{ interface.pf_reply_to_v4.interface }} {{ interface.pf_reply_to_v4.nexthop }} ){% endif %} inet proto icmp all icmp-type { unreach, echoreq, timex }

pass out quick on ${{ interface.pf_macro }} inet proto icmp all icmp-type { unreach, echoreq, timex }


# permit ICMP6
pass in quick on ${{ interface.pf_macro }} {% if "pf_reply_to_v6" in interface %} reply-to ( {{ interface.pf_reply_to_v6.interface }} {{ interface.pf_reply_to_v6.nexthop }} ){% endif %} inet6 proto icmp6 all icmp6-type { echoreq, echorep, neighbradv, neighbrsol, routeradv, routersol, unreach, timex, paramprob }

pass out quick on ${{ interface.pf_macro }} inet6 proto icmp6 all icmp6-type { echoreq, echorep, neighbradv, neighbrsol, routeradv, routersol, unreach, timex, paramprob }


{% if pf_gateway %}
# this is a gateway, block remaining inbound traffic to the firewalls own IPs on this interface
block in log quick on ${{ interface.pf_macro }} from any to <firewalls_own_ips>

{% if "pf_routing" in interface and interface.pf_routing %}
# We are acting as router for the network this interface is connected to, so permit all remaining inbound traffic on the interface
pass in quick on ${{ interface.pf_macro }}{% if "pf_reply_to_v4" in interface %} reply-to ( {{ interface.pf_reply_to_v4.interface }} {{ interface.pf_reply_to_v4.nexthop }} ){% endif %} inet

pass in quick on ${{ interface.pf_macro }}{% if "pf_reply_to_v6" in interface %} reply-to ( {{ interface.pf_reply_to_v6.interface }} {{ interface.pf_reply_to_v6.nexthop }} ){% endif %} inet6

{% endif %}

# Permit traffic from the firewall itself on this interface
pass out quick on ${{ interface.pf_macro }} from <firewalls_own_ips> to any


{% if "pf_upstream" in interface and interface.pf_upstream %}
# this is an upstream interface, permit all remaining outgoing traffic
pass out quick on ${{ interface.pf_macro }} all
{% endif %}

{% else %}
# pass all outgoing traffic on this interface
pass out quick on ${{ interface.pf_macro }} all
{% endif %}

{% endfor %}

