---
- name: "Install pip"
  pkgng:
    name: "py38-pip"
    state: "present"

- name: "Install setuptools"
  pkgng:
    name: "py38-setuptools"
    state: "present"

- name: "Install virtualenv"
  pkgng:
    name: "py38-virtualenv"
    state: "present"

- name: "Install OS dependencies for django"
  pkgng:
    name: "{{ django_os_dependencies + django_extra_os_dependencies | default([]) }}"
    state: "present"

- name: "Install gettext-tools if neded"
  pkgng:
    name: "gettext-tools"
    state: "present"
  when: django_i18n | default(False)

- name: "Check if we have an existing virtualenv for Django"
  stat:
    path: "{{ django_virtualenv_path }}"
  register: django_virtualenv
  changed_when: False
  tags:
    - "pip"

- name: "Get Python version for existing Django virtualenv"
  command: "{{ django_virtualenv_path }}/bin/python -V"
  register: python_version
  changed_when: False
  when: django_virtualenv.stat.exists
  tags:
    - "pip"

- name: "Remove py3.5 venv if we have one"
  file:
    state: "absent"
    path: "{{ django_virtualenv_path }}"
  when:
    - django_virtualenv.stat.exists
    - python_version.stdout[0:10] == "Python 3.5"
  tags:
    - "pip"

- name: "Find snowflake pip modules which need --global-option=build_ext from requirements file"
  command: "/usr/bin/grep -E '(^cryptography|^psycopg2|^lxml)' {{ django_pip_requirements_path }}"
  register: result
  changed_when: False
  ignore_errors: True
  tags:
    - "pip"

- name: "Install snowflake pip modules which need --global-option=build_ext"
  pip:
    name: "{{ result.stdout_lines }}"
    virtualenv: "{{ django_virtualenv_path }}"
    virtualenv_python: "{{ django_python_path }}"
    extra_args: '--global-option=build_ext'
  environment:
    CFLAGS: "-I/usr/local/include"
    LDFLAGS: "-L/usr/local/include"
    LANG: "C.UTF-8"
  tags:
    - "pip"
  when: result.stdout != ""

- name: "Install remaining needed pip modules"
  pip:
    requirements: "{{ django_pip_requirements_path }}"
    virtualenv: "{{ django_virtualenv_path }}"
    virtualenv_python: "{{ django_python_path }}"
  environment:
    LANG: "C.UTF-8"
  tags:
    - "pip"

- name: "Install uwsgi in virtualenv"
  pip:
    name: "uwsgi"
    virtualenv: "{{ django_virtualenv_path }}"
    virtualenv_python: "{{ django_python_path }}"
  tags:
    - "pip"

- name: "Install redis for django channel_layer where needed"
  pkgng:
    name: "databases/redis"
    state: "present"
  when: django_channels_layer_redis

- name: "Install channels_redis pip package for django channel_layer where needed"
  pip:
    name: "channels_redis"
    virtualenv: "{{ django_virtualenv_path }}"
    virtualenv_python: "{{ django_python_path }}"
  when: django_channels_layer_redis

